.\" Automatically generated by Pandoc 3.5
.\"
.TH "mysql_send_query" "3" "" "Version 3.4.2" "MariaDB Connector/C"
.SS Name
mysql_send_query \- sends a SQL statement without waiting for server
response
.SS Synopsis
.IP
.EX
#include \f[B]<mysql.h>\f[R]

int mysql_send_query(MYSQL * mysql,
                     const char *query,
                     unsigned long length);
.EE
.SS Description
Sends a statement to the server, without waiting for the Server OK
packet and/or resultset.
.SS Parameters
.IP \[bu] 2
\f[CR]mysql\f[R] \- a mysql handle, which was previously allocated by
\f[B]mysql_init(3)\f[R] and connected by
\f[B]mysql_real_connect(3)\f[R].
.IP \[bu] 2
\f[CR]query\f[R] \- SQL statement
.IP \[bu] 2
\f[CR]length\f[R] \- length of the SQL statement
.SS Notes
.IP \[bu] 2
The OK and result set package need to be retrieved by
\f[B]mysql_read_query_result(3)\f[R] function
.IP \[bu] 2
\f[CR]mysql_send_query()\f[R] can be used for semi asynchronous
operation.
While the function itself is blocking, an event driven application can
do other tasks until result set is available.
.SS Example
For an example how to use \[cq]mysql_send_query()\[ga] in an event
driven model, please check Jan Kneschke\[cq]s article \c
.UR https://jan.kneschke.de/projects/mysql/async-mysql-queries-with-c-api/
\[lq]Async MySQL Queries with C\-API\[rq]
.UE \c
\&.
.SS See also
.IP \[bu] 2
mysql_real_query
.IP \[bu] 2
mysql_read_query_result
