.\" Automatically generated by Pandoc 3.5
.\"
.TH "mysql_stmt_prepare" "3" "" "Version 3.4.2" "MariaDB Connector/C"
.SS Name
mysql_stmt_prepare \- Prepares an SQL string
.SS Synopsis
.IP
.EX
#include \f[B]<mysql.h>\f[R]

int mysql_stmt_prepare(MYSQL_STMT * stmt,
                       const char * query,
                       unsigned long length);
.EE
.SS Description
Prepares the SQL query.
.SS Parameter
.IP \[bu] 2
\f[CR]stmt\f[R] \- a statement handle, which was previously allocated by
\f[B]mysql_stmt_init(3)\f[R].
.IP \[bu] 2
\f[CR]query\f[R] \- SQL statement
.IP \[bu] 2
\f[CR]length\f[R] \- length of SQL statement
.SS Return value
Zero on success, non zero on error.
.SS Notes
.IP \[bu] 2
The parameter markers must be bound to application variables using
\f[B]mysql_stmt_bind_param(3)\f[R].
.IP \[bu] 2
The maximum number of parameters is 65535 (0xFFFF).
.IP \[bu] 2
The markers are legal only in certain places in SQL statements.
For example, they are allowed in the VALUES() list ofINSERT statement
(to specify column values for a row), or in a comparison with a column
in a [select()](WHERE]] clause to specify a comparison value.
However, they are not allowed in identifiers (such as table or column
names) in the select list that names the columns to be returned by
SELECT statement, or to specify both operands of a binary operator such
as the equal sign.
The latter restriction is necessary because it would be impossible to
determine the parameter type.
In general, parameters are legal only in Data Manipulation Language
(DML) statements, and not in Data Definition Language (DDL) statements.
.SS See Also
.IP \[bu] 2
\f[B]mysql_stmt_init(3)\f[R]
.IP \[bu] 2
\f[B]mysql_stmt_param_count(3)\f[R]
.IP \[bu] 2
\f[B]mysql_stmt_execute(3)\f[R]
